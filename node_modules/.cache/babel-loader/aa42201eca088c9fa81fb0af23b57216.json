{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diama\\\\Desktop\\\\diamond-final\\\\src\\\\components\\\\ServiceForm.js\";\nimport React from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\n\nconst ServiceForm = () => {\n  // Static Data\n  const [title, setTitle] = React.useState('');\n  const [graphText, setGraphText] = React.useState('');\n  const [formLabels, setFormlabels] = React.useState([]);\n  const [formText, setFormText] = React.useState('');\n  const [buttonText, setButtonText] = React.useState('');\n  const [stats, setStats] = React.useState([]); // Percentage\n\n  const [percentage1, setPercentage1] = React.useState(0);\n  const [percentage2, setPercentage2] = React.useState(0);\n  const [percentage3, setPercentage3] = React.useState(0);\n  React.useEffect(function () {\n    fetch('https://voda-react-assessment.herokuapp.com/home').then(r => r.json()).then(data => {\n      const sectionData = data[0].sections[1];\n      console.log({\n        sectionData\n      });\n      setTitle(sectionData.title);\n      setGraphText(sectionData.graphText);\n      setFormlabels(sectionData.formLabels);\n      setFormText(sectionData.formText);\n      setButtonText(sectionData.buttonText);\n      setStats(sectionData.stats.map(stat => ({\n        title: stat.title,\n        amount: stat.amount / 10\n      })));\n    }).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"main-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, title)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, graphText)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, stats.map((stat, index) => {\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: {\n        span: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, stat.title), /*#__PURE__*/React.createElement(Col, {\n      xs: {\n        span: 1,\n        offset: \"8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    }, stat.amount, \"%\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"range\",\n      onChange: e => {\n        console.log(e.target.value);\n        stats[index].amount = e.target.value;\n        setStats(stats.slice());\n      },\n      value: stat.amount,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, formText), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"We work with ecosystem leaders, corporation and startups worldwide. How can we help you?\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(EnqiryForm, {\n    formLabels: formLabels,\n    buttonText: buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })))));\n};\n/**\n * Enquiry Form\n */\n\n\nconst EnqiryForm = ({\n  formLabels,\n  buttonText\n}) => {\n  const [phone, setPhone] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const [password, setPassword] = React.useState(null);\n  const [error, setError] = React.useState(null); // Email Regex\n\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  const phoneRegex = /(\\+\\d\\d)?[26]\\d{9}$/; // Morethan8digits.\n  // It should include at least:\n  // a number,\n  // a capital letter,\n  // a symbol and\n  // a low case letter.\n\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n\n  const validateForm = () => {\n    setError(null);\n\n    if (emailRegex.test(email) === false) {\n      setError('Email is invalid!');\n      return;\n    }\n\n    if (phoneRegex.test(phone) === false) {\n      setError('Phone number is invalid!');\n      return;\n    }\n\n    if (passwordRegex.test(password) === false) {\n      setError('Password is invalid.\\nMust be more than 8digits.It should include atleast:a number,a capital letter,a symbol and a low case letter.');\n      return;\n    }\n\n    alert('Form completed');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"enquiry-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formYourPhone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"tel\",\n    placeholder: formLabels[0],\n    className: \"custom-input\",\n    onChange: e => {\n      setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formYourEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: formLabels[1],\n    className: \"custom-input\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formYourPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: formLabels[2],\n    className: \"custom-input\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, error ? error : '')), /*#__PURE__*/React.createElement(Form.Group, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 'auto'\n    },\n    className: \"custom-submit\",\n    onClick: () => validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, buttonText)));\n};\n\nexport default ServiceForm;","map":{"version":3,"sources":["C:/Users/diama/Desktop/diamond-final/src/components/ServiceForm.js"],"names":["React","Button","Col","Form","Row","ServiceForm","title","setTitle","useState","graphText","setGraphText","formLabels","setFormlabels","formText","setFormText","buttonText","setButtonText","stats","setStats","percentage1","setPercentage1","percentage2","setPercentage2","percentage3","setPercentage3","useEffect","fetch","then","r","json","data","sectionData","sections","console","log","map","stat","amount","catch","err","error","width","index","span","offset","e","target","value","slice","EnqiryForm","phone","setPhone","email","setEmail","password","setPassword","setError","emailRegex","phoneRegex","passwordRegex","validateForm","test","alert","display","justifyContent","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\n\nconst ServiceForm = () => {\n\n    // Static Data\n    const [title, setTitle] = React.useState('');\n    const [graphText, setGraphText] = React.useState('');\n    const [formLabels, setFormlabels] = React.useState([]);\n    const [formText, setFormText] = React.useState('');\n    const [buttonText, setButtonText] = React.useState('');\n    const [stats, setStats] = React.useState([]);\n\n\n    // Percentage\n    const [percentage1, setPercentage1] = React.useState(0);\n    const [percentage2, setPercentage2] = React.useState(0);\n    const [percentage3, setPercentage3] = React.useState(0);\n\n    React.useEffect(function () {\n        fetch('https://voda-react-assessment.herokuapp.com/home')\n            .then(r => r.json())\n            .then(data => {\n                const sectionData = data[0].sections[1];\n                console.log({ sectionData })\n                setTitle(sectionData.title);\n                setGraphText(sectionData.graphText);\n                setFormlabels(sectionData.formLabels);\n                setFormText(sectionData.formText);\n                setButtonText(sectionData.buttonText);\n                setStats(sectionData.stats.map(stat => ({ title: stat.title, amount: stat.amount / 10 })));\n            })\n            .catch(err => console.error(err));\n    }, []);\n\n\n    return (\n        <Row className=\"main-section\">\n            <Col xl={6}>\n                <Row>\n                    <h5>{title}</h5>\n                </Row>\n                <Row>\n                    <p>{graphText}</p>\n                </Row>\n                <Row>\n                    <Form style={{ width: '100%' }}>\n                        {stats.map((stat, index) => {\n                            return (\n                                <Form.Group>\n                                    <Row>\n                                        <Col xs={{ span: 3 }}>{stat.title}</Col>\n                                        <Col xs={{ span: 1, offset: \"8\" }}>{stat.amount}%</Col>\n                                    </Row>\n                                    <Form.Control\n                                        type=\"range\"\n                                        onChange={(e) => {\n                                            console.log(e.target.value);\n                                            stats[index].amount = e.target.value;\n                                            setStats(stats.slice());\n                                        }}\n                                        value={stat.amount} style={{ width: '100%' }} />\n                                </Form.Group>\n                            )\n                        })}\n                    </Form>\n                </Row>\n\n            </Col>\n            <Col xl={6}>\n                <Row >\n                    <Col xs={12}>\n                        <h5 className=\"text-center\">{formText}</h5>\n                        <p className=\"text-center\">We work with ecosystem leaders, corporation and startups worldwide. How can we help you?</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12}>\n                        <EnqiryForm formLabels={formLabels} buttonText={buttonText} />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\n\n/**\n * Enquiry Form\n */\nconst EnqiryForm = ({ formLabels, buttonText }) => {\n    const [phone, setPhone] = React.useState(null);\n    const [email, setEmail] = React.useState(null);\n    const [password, setPassword] = React.useState(null);\n    const [error, setError] = React.useState(null);\n\n    // Email Regex\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const phoneRegex = /(\\+\\d\\d)?[26]\\d{9}$/;\n    // Morethan8digits.\n    // It should include at least:\n    // a number,\n    // a capital letter,\n    // a symbol and\n    // a low case letter.\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n\n    const validateForm = () => {\n        setError(null);\n        if (emailRegex.test(email) === false) {\n            setError('Email is invalid!');\n            return;\n        }\n        if (phoneRegex.test(phone) === false) {\n            setError('Phone number is invalid!');\n            return;\n        }\n\n        if (passwordRegex.test(password) === false) {\n            setError('Password is invalid.\\nMust be more than 8digits.It should include atleast:a number,a capital letter,a symbol and a low case letter.');\n            return;\n        }\n        alert('Form completed');\n    };\n\n    return (\n        <Form className=\"enquiry-form\">\n            <Form.Group controlId=\"formYourPhone\">\n                <Form.Control\n                    type={\"tel\"}\n                    placeholder={formLabels[0]}\n                    className=\"custom-input\"\n                    onChange={(e) => { setPhone(e.target.value) }} />\n            </Form.Group>\n            <Form.Group controlId=\"formYourEmail\">\n                <Form.Control\n                    type={\"email\"}\n                    placeholder={formLabels[1]}\n                    className=\"custom-input\"\n                    onChange={(e) => setEmail(e.target.value)} />\n            </Form.Group>\n            <Form.Group controlId=\"formYourPassword\">\n                <Form.Control\n                    type={\"password\"}\n                    placeholder={formLabels[2]}\n                    className=\"custom-input\"\n                    onChange={(e) => setPassword(e.target.value)} />\n            </Form.Group>\n            <Form.Group style={{ display: 'flex', justifyContent: 'center' }}>\n                <p>{error ? error : ''}</p>\n            </Form.Group>\n            <Form.Group style={{ display: 'flex', justifyContent: 'center' }}>\n\n                <Button style={{ margin: 'auto' }} className='custom-submit' onClick={() => validateForm()}>{buttonText}</Button>\n            </Form.Group>\n        </Form>\n    )\n}\n\n\n\nexport default ServiceForm;\n"]},"metadata":{},"sourceType":"module"}